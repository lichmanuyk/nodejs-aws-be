service: import-service
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: dev
  region: eu-west-1

  iam:
    role:
      statements:
        - Effect: "Allow"
          Action: "s3:ListBucket"
          Resource:
            - "arn:aws:s3:::import-service-csv-bucket"
        - Effect: "Allow"
          Action: "s3:*"
          Resource:
            - "arn:aws:s3:::import-service-csv-bucket/*"
        - Effect: "Allow"
          Action: "sqs:*"
          Resource:
            - "arn:aws:sqs:eu-west-1:072657732908:catalogItemsQueue"

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'

custom:
  authArn: ${cf:authorization-service-dev.authArn}

plugins:
  - serverless-webpack

functions:
  importProductsFile:
    handler: handler.importProductsFile
    events:
      - http:
          path: import
          method: get
          cors: true
          authorizer:
            name: basicAuthorizer
            arn: ${self:custom.authArn}
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token
          request:
            parameters:
              querystrings:
                name: true
  importFileParser:
    handler: handler.importFileParser
    events:
      - s3:
          bucket: import-service-csv-bucket
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true
